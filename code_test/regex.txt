START					:=	(#<START1> | <START3>)*
START1					:=	#<START2>
START2					:=	i<INCLUDE> | d<DEFINE>
START3					:=	<START4>; | <START4>=<SPACE>*<VARIABLE_DEFINITION> | <START4>(<SPACE>*<PARAMETERS>)
START4					:=	<TYPE>*<SPACE>*<NAME>*<SPACE>*
VARIABLE_DEFINITION 	:=	[0-9]<NUMERIC_VALUE> | '<CHAR>' | <NAME>(<PARAMETERS>);
FUNCTION 				:=	
TYPE					:=	NAME
NAME 					:=	[a-zA-Z][a-zA-z0-9_]*
SPACE					:=	 *\\n*\\t*

INCLUDE					:=	#include<SPACE>*<LIBRARY>
DEFINE					:=	#define<SPACE>*<NAME><SPACE><VALUE>			//bu değişecek
FUNCTION_DECLARATION	:=	<TYPE><SPACE>*<NAME><SPACE>*(<SPACE>*<PARAMETER><SPACE>*);
FUNCTION_DEFINITION		:=	<TYPE><SPACE>*<NAME><SPACE>*(<SPACE>*<PARAMETER><SPACE>*)<SPACE>*{<SPACE>*<CONTENT><SPACE>*}
SPACE					:=	 *\\n*\\t*
LIBRARY					:=	<[a-zA-Z0-9\\\\_\\.]*>	|	"[a-zA-Z0-9\\\\_\\.]*"
NAME 					:=	[a-zA-Z][a-zA-z0-9_]*
VALUE					:=	[0-9]*\\.[0-9]*	|	[0-9]*	|	'.'	|	".*"
TYPE					:=	[TYPE_LIST]
PARAMETER				:=	<TYPE><SPACE>*<NAME> | <PARAMETER><SPACE>*,<SPACE>*<PARAMETER>
CONTENT					:=	<COMMAND><SPACE>*;<SPACE>*<COMMAND>; | <LOOP>
COMMAND					:=	<VARIABLE_DECLARATION | VARIABLE_DEFINITION | FUNCTION_CALL | CONDITIONAL>
LOOP					:=	<FOR_LOOP | WHILE_LOOP | DO_WHILE_LOOP>
VARIABLE_DECLARATION	:=	<TYPE><SPACE>*<NAME><SPACE>*;	
VARIABLE_DEFINITION		:=	<TYPE><SPACE>*<NAME><SPACE>*=<SPACE>*<VALUE | NAME | FUNCTION_CALL | CONDITIONAL><SPACE>*;
FUNCTION_CALL			:=	<NAME><SPACE>*(<SPACE>*<PARAMETER><SPACE>*)<SPACE>*;
CONDITIONAL				:=	<NAME | VALUE | FUNCTION_CALL><SPACE>*< < | > | <= | >= | && | || | ...>
FOR_LOOP				:=	for<SPACE>*(<SPACE>*<COMMAND><SPACE>*;<SPACE>*<COMMAND><SPACE>*;<SPACE>*<COMMAND><SPACE>*)<SPACE>*{<SPACE>*<CONTENT><SPACE>*}
WHILE_LOOP				:=	while<SPACE>*(<SPACE>*<COMMAND><SPACE>*)<SPACE>*{<SPACE>*<CONTENT><SPACE>*}
DO_WHILE_LOOP			:=	do<SPACE>*{<SPACE>*<CONTENT><SPACE>*}<SPACE>*while<SPACE>*(<SPACE>*<COMMAND><SPACE>*)<SPACE>*;





TYPELIST:=	